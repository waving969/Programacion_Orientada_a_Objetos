/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import civitas.Casilla;
import civitas.CasillaCalle;
import civitas.CivitasJuego;
import civitas.Diario;
import civitas.Jugador;
import civitas.OperacionInmobiliaria;
import civitas.OperacionJuego;
import controladorCivitas.Respuesta;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Wavin
 */
public class CivitasView extends javax.swing.JFrame {

    /**
     * Creates new form CivitasView
     */
    
    CivitasJuego juego;
    //JugadorPanel jugadorPanel;
    
    public CivitasView() {
        initComponents();
        this.ranking.setVisible(false);
        this.rankingLabel.setVisible(false );
        this.PanelColeccion.setVisible(true);
        this.panelPrueba.setVisible(true);
        
    }
    
    public void setCivitasJuego(CivitasJuego juego){
        this.juego = juego;
        //this.jugadorPanel = new JugadorPanel();  
        //initComponents();
        setVisible(true);
    }
    
    public void pausa(){
        int val= JOptionPane.showConfirmDialog(null, "¿Continuar?",
                                                "Siguiente paso", JOptionPane.YES_NO_OPTION);
        if (val==1) System.exit(0);
    }
    public Respuesta comprar(){
        int val= 1-JOptionPane.showConfirmDialog(null, "¿Desea Comprar la calle actual? ",
                                                "Comprar", JOptionPane.YES_NO_OPTION);
        if (val==1) return Respuesta.SI;
        else return Respuesta.NO;
    }
    
    public OperacionInmobiliaria elegirOperacion(){
        GestionarDialog gestion = new GestionarDialog(this);
        gestion.setVisible(true);
        int res = gestion.gestionElegida;
        return OperacionInmobiliaria.values()[res];
    }
    
    public int elegirPropiedad(){
        PropiedadDialog propiedad = new PropiedadDialog(this, juego.getJugadorActual());
       propiedad.setVisible(true);
        return propiedad.getPropiedadElegida();
    } 
    
    public void actualiza(){
        this.jugadorPanel1.setJugador(juego.getJugadorActual());
        //this.propiedadPanel1.setPropiedad((CasillaCalle)juego.getTablero().getCasilla(juego.getJugadorActual().getCasillaActual()));

            this.PanelColeccion.removeAll();
            //this.propiedadPanel1.removeAll();
            this.panelPrueba.removeAll();
            for (int i = 0; i<juego.getJugadorActual().getPropiedades().size(); i++){
                PropiedadPanel p1 = new PropiedadPanel();
                
                p1.setPropiedad(juego.getJugadorActual().getPropiedades().get(i));
                this.PanelColeccion.add(p1);
                //this.propiedadPanel1.add(p1);
                this.panelPrueba.add(p1);
              
            }
        
       
        this.casillaActual.setText(Integer.toString(juego.getJugadorActual().getCasillaActual()));
        if(!this.juego.finalDelJuego()){
            this.ranking.setVisible(false);
            this.rankingLabel.setVisible(false);
        }else{
            this.ranking.setVisible(true);
            this.rankingLabel.setVisible(true);
            String devolver = " ";
            for (Jugador j: juego.ranking()){
                devolver += j.getNombre()+" "; 
            }
            this.ranking.setText(devolver);
            repaint();
            revalidate();
        }
        
        
        repaint();
        revalidate();
        
    }
    
    public void mostrarSiguienteOperacion(OperacionJuego operacion) {
      switch(operacion){
          case AVANZAR:
              this.sigOperacion.setText("La siguiente operacion es avanzar");
              //GUI.DadoGUI.createInstance(this);
              break;
          case COMPRAR:
              this.sigOperacion.setText("La siguiente operacion es comprar");
              break;
          case GESTIONAR:
              this.sigOperacion.setText("La siguiente operacion es gestionar");
              break;
          case PASAR_TURNO:
              this.sigOperacion.setText("La siguiente operacion es pasar turno");
              break;
          default:
              this.sigOperacion.setText("La siguiente operacion es salir de la carcel");
      }
      
      repaint();
      //revalidate();
    }
    
    public void mostrarEventos() {
        if(Diario.getInstance().eventosPendientes()){
            DiarioDialog diarioD = new DiarioDialog(this);
            diarioD.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jugadorPanel2 = new GUI.JugadorPanel();
        jLabel1 = new javax.swing.JLabel();
        jugadorPanel1 = new GUI.JugadorPanel();
        jLabel2 = new javax.swing.JLabel();
        casillaActual = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        sigOperacion = new javax.swing.JTextField();
        rankingLabel = new javax.swing.JLabel();
        ranking = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        PanelColeccion = new javax.swing.JPanel();
        panelPrueba = new javax.swing.JPanel();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Impact", 3, 24)); // NOI18N
        jLabel1.setText("Civitas");

        jLabel2.setText("Casilla Actual");

        casillaActual.setEditable(false);

        jLabel3.setText("Siguiente Operacion");

        sigOperacion.setEditable(false);
        sigOperacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sigOperacionActionPerformed(evt);
            }
        });

        rankingLabel.setText("Ranking");

        ranking.setEditable(false);

        PanelColeccion.setAutoscrolls(true);

        panelPrueba.setAutoscrolls(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jugadorPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(rankingLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ranking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(casillaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sigOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(PanelColeccion, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(panelPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jugadorPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(casillaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(sigOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rankingLabel)
                            .addComponent(ranking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(182, 182, 182))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PanelColeccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(panelPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sigOperacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sigOperacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sigOperacionActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelColeccion;
    private javax.swing.JTextField casillaActual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private GUI.JugadorPanel jugadorPanel1;
    private GUI.JugadorPanel jugadorPanel2;
    private javax.swing.JPanel panelPrueba;
    private javax.swing.JTextField ranking;
    private javax.swing.JLabel rankingLabel;
    private javax.swing.JTextField sigOperacion;
    // End of variables declaration//GEN-END:variables
}

